[buildout]

extensions +=
    plone.versioncheck

parts +=
    test
    testme
    coverage
    coverageme
    report
    robot
    sphinxbuilder
    ploneversioncheck
    ipzope

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    ${instance1:eggs}
    Pillow
    Plone
    Products.PasswordResetTool [test]
    Products.PasswordStrength [test]
    collective.eeafaceted.z3ctable [test]
    collective.eeafaceted.collectionwidget [test]
    collective.behavior.talcondition [test]
    collective.ckeditortemplates [test]
    collective.classification.tree [test]
    collective.classification.folder [test]
    collective.contact.contactlist [test]
    collective.contact.core [test]
    collective.contact.plonegroup [test]
    collective.dms.basecontent [test]
    collective.dms.batchimport [test]
    collective.dms.mailcontent [test]
    collective.documentgenerator [test]
    collective.eeafaceted.batchactions [test]
    collective.eeafaceted.collectionwidget [test]
    collective.MockMailHost
    collective.querynextprev [test]
    collective.task [test]
    collective.wfadaptations [test]
    dexterity.localroles [test]
    dexterity.localrolesfield [test]
    imio.actionspanel [test]
    imio.dashboard [test]
    imio.dms.mail [test]
    imio.history [test]
    imio.migrator [test]
    imio.prettylink [test]
    imio.pyutils
    imio.zamqp.dms [test]
    ipdb
    plone.app.testing
    plone.dexterity [test]
    plone.formwidget.masterselect [test]
    robotframework-selenium2screenshots
environment = testenv
initialization =
    from datetime import datetime
    print("TESTS RUN ON: {}".format(datetime.strftime(datetime.now(), '%Y-%m-%d %H:%M')))

[testme]
<= test
initialization +=
    sys.argv = sys.argv[:] + ['-s', 'imio.dms.mail']

[testenv]
zope_i18n_compile_mo_files = true
# for documentgenerator
# zope_i18n_allowed_languages = fr en
OO_PORT = ${port:oo-port}
PYTHON_UNO = ${port:python-uno}
PUBLIC_URL = ${port:public-url}
decorate_acl_methods = true

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/collective.contact.plonegroup/src/collective/contact/plonegroup,' \
              '${buildout:directory}/src/collective.dms.basecontent/src/collective/dms/basecontent,' \
              '${buildout:directory}/src/collective.dms.batchimport/src/collective/dms/batchimport,' \
              '${buildout:directory}/src/collective.dms.mailcontent/src/collective/dms/mailcontent,'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '-s', 'collective.contact.plonegroup',
                              '-s', 'collective.dms.basecontent', '-s', 'collective.dms.mailcontent',
                              '-s', 'collective.dms.batchimport',]

[coverageme]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=coverageme
initialization =
    include = '--source=${buildout:directory}/src/imio.dms.mail/imio/dms/mail,'
    sys.argv = sys.argv[:] + ['run', '-a', include, 'bin/test', '-s', 'imio.dms.mail']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework [debug]  # reload cannot be used with fixture override
    robotframework-selenium2screenshots
initialization =
    import os
    os.environ['ENV'] = 'DEV'
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    os.environ['PYTHON_UNO'] = '${port:python-uno}'
    # os.environ['IS_ROBOT'] = 'true'

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs
interpreter = ${buildout:directory}/bin/zopepy

[omelette]
eggs +=
    ${test:eggs}

[ploneversioncheck]
recipe = zc.recipe.egg
eggs = plone.versioncheck

[ipzope]
# An IPython Shell for interactive use with Zope running.
# It requires the `ipy_profile_zope.py` configuration script.
# Get this from git@github.com:collective/dotipython.git
# and put it in your profile directory. `$HOME/.ipython/profile_zope2/startup`,
# wget https://raw.githubusercontent.com/collective/dotipython/master/ipy_profile_zope.py
# or see https://ipython.org/ipython-doc/stable/config/intro.html for more details.
recipe = zc.recipe.egg
eggs =
    ipython
    ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope

[versions]
#tests
collective.MockMailHost = 1.1.0
# cannot be upgraded to 1.3.0 for imio.helpers tests. We have other broken tests...
plone.app.relationfield = 1.2.3
# 1.2 last compatible with plone 4
plone.app.robotframework = 1.2.4
# last working with debug
robotframework = 3.0.4
# last compatible with plone 4
robotframework-debuglibrary = 1.3.1
robotframework-pythonlibcore = 2.1.0
# last working with debug
robotframework-seleniumlibrary = 4.3.0
robotframework-selenium2library = 3.0.0
robotframework-selenium2screenshots = 0.8.1
robotsuite = 2.2.1
selenium = 3.141.0
Sphinx = 1.8.5
sphinxcontrib-robotframework = 0.8.0
# watchdog = 0.10.7

# Required by:
# Sphinx==1.8.5
alabaster = 0.7.12
imagesize = 0.7.1
packaging = 20.9
pyparsing = 2.4.7
snowballstemmer = 1.2.1
sphinxcontrib-websupport = 1.0.1
typing = 3.7.4.3

# Required by:
# watchdog
# pathtools = 0.1.2