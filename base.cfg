[buildout]
extensions =
    buildout.dumppickedversions
    mr.developer
dump-picked-versions-file = versions-picked.cfg
overwrite-picked-versions-file = true
#allow-picked-versions = false

parts =
    productdistros
    svnproducts
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends = 
    http://dist.plone.org/release/4.2.3/versions.cfg
    versions-base.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.2.3
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://b.pypi.python.org
    http://c.pypi.python.org
    http://d.pypi.python.org

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
#    PyXML
#- hotfix -#
#    up to date

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
#    src/communesplone.iconified_document_actions
#    src/communesplone.layout

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

always-checkout = force
auto-checkout +=
    collective.contact.core
#    collective.contact.vcard #nomore necessary
#    collective.local.workspace
    collective.dms.basecontent
    collective.dms.mailcontent
    collective.dms.batchimport
    collective.dms.thesaurus
    imio.dms.mail
    plone.act
#    plone.app.dexterity
    plone.app.jquerytools
    plone.dexterity
    plone.formwidget.contenttree
    plone.formwidget.masterselect
    plonetheme.imioapps

[remotes]
plone = git://github.com/plone
plone_push = git@github.com:plone
vincentfretin = git://github.com/vincentfretin
vincentfretin_push = git@github.com:vincentfretin
cedricmessiant = git://github.com/cedricmessiant
cedricmessiant_push = git@github.com:cedricmessiant
entrouvert = git://repos.entrouvert.org
entrouvert_push = git+ssh://git@repos.entrouvert.org

[sources]
collective.contact.core = git ${remotes:vincentfretin}/collective.contact.core.git pushurl=${remotes:vincentfretin_push}/collective.contact.core.git
#collective.contact.vcard = git ${remotes:vincentfretin}/collective.contact.vcard.git pushurl=${remotes:vincentfretin_push}/collective.contact.vcard.git
#collective.local.workspace = git ${remotes:tdesvenain}/collective.local.workspace.git pushurl=${remotes:tdesvenain_push}/collective.local.workspace.git
collective.dms.basecontent = git ${remotes:vincentfretin}/collective.dms.basecontent.git pushurl=${remotes:vincentfretin_push}/collective.dms.basecontent.git
collective.dms.mailcontent = git ${remotes:vincentfretin}/collective.dms.mailcontent.git pushurl=${remotes:vincentfretin_push}/collective.dms.mailcontent.git
collective.dms.batchimport = git ${remotes:vincentfretin}/collective.dms.batchimport.git pushurl=${remotes:vincentfretin_push}/collective.dms.batchimport.git
collective.dms.thesaurus = git ${remotes:entrouvert}/collective.dms.thesaurus.git pushurl=${remotes:entrouvert_push}/collective.dms.thesaurus.git
#ecreall.helpers.testing = git ${remotes:tdesvenain}/ecreall.helpers.testing.git pushurl=${remotes:tdesvenain_push}/ecreall.helpers.testing.git
#ecreall.helpers.upgrade = git ${remotes:tdesvenain}/ecreall.helpers.upgrade.git pushurl=${remotes:tdesvenain_push}/ecreall.helpers.upgrade.git
imio.dms.mail = svn http://svn.communesplone.org/svn/communesplone/imio.dms.mail
plone.act = git ${remotes:plone}/plone.act.git pushurl=${remotes:plone_push}/plone.act.git
plone.dexterity = git ${remotes:cedricmessiant}/plone.dexterity.git pushurl=${remotes:cedricmessiant_push}/plone.dexterity.git
plone.formwidget.autocomplete = git ${remotes:plone}/plone.formwidget.autocomplete.git pushurl=${remotes:plone_push}/plone.formwidget.autocomplete.git
plone.formwidget.contenttree = git ${remotes:plone}/plone.formwidget.contenttree.git pushurl=${remotes:plone_push}/plone.formwidget.contenttree.git
plone.formwidget.masterselect = git ${remotes:cedricmessiant}/plone.formwidget.masterselect.git pushurl=${remotes:cedricmessiant_push}/plone.formwidget.masterselect.git
plonetheme.imioapps = svn http://svn.communesplone.org/svn/communesplone/plonetheme.imioapps/trunk
plone.app.jquerytools = git ${remotes:vincentfretin}/plone.app.jquerytools.git branch=1.3 pushurl=${remotes:vincentfretin_push}/plone.app.jquerytools.git

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls = 
#    file://${buildout:directory}/ZPsycopgDA_2013.tgz
nested-packages = 
version-suffix-packages = 

[svnproducts]
recipe = infrae.subversion
urls =
#    http://svn.communesplone.org/svn/communesplone/ACPTranslation/tags/plone3x ACPTranslation
#    http://svn.communesplone.org/svn/communesplone/contacts/tags/0.6 contacts
    http://svn.communesplone.org/svn/communesplone/CPUtils/trunk CPUtils

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products = ${instance1:products}
#packages = ${zope2:location}/lib/python ./

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = 
user = admin:admin
http-address = 8081
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add.conf
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Products.DocFinderTab
    Products.csvreplicata
    collective.ckeditor
    collective.contact.core
#    collective.contact.vcard
#    collective.local.workspace
    collective.dms.basecontent
    collective.dms.batchimport
    collective.dms.mailcontent
    collective.quickupload
    imio.dms.mail
    plone.app.dexterity
    plonetheme.imioapps

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    plonetheme.imioapps

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${svnproducts:location}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
