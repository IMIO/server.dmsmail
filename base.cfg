[buildout]
extensions =
    mr.developer

show-picked-versions = true
allow-picked-versions = false

parts =
    omelette
    instance1
    zopepy
#    ipzope
    repozo

index = http://pypi.imio.be/imio/imio/+simple/

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    http://dist.plone.org/release/4.3.3/versions.cfg
    https://raw.github.com/plone/buildout.dexterity/master/sources.cfg
    versions-base.cfg
    sources.cfg
    port.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
#    http://pypi.imio.be/imio/imio/+simple/
    http://dist.plone.org/release/4.3.3
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs +=

develop =

# Only take stable eggs
#prefer-final = true

always-checkout = false
auto-checkout +=
    Products.PasswordStrength
    collective.task
    imio.dms.mail
    plone.formwidget.contenttree
    plone.formwidget.masterselect
    plonetheme.imioapps

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products = ${instance1:products}

[instance1]
recipe = plone.recipe.zope2instance
user = admin:${port:admin-password}
http-address = ${port:instance1-http}
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  extensions ${buildout:directory}/Extensions
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add.conf
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

eggs =
  ${buildout:eggs}
  Products.PasswordStrength
  imio.dms.policy
  imio.dms.amqp

zcml =
  imio.dms.policy
  imio.dms.amqp

products =
    ${buildout:directory}/products
#    ${svnproducts:location}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[ipzope]
recipe = zc.recipe.egg
eggs = ipython ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[standard]
recipe = collective.recipe.plonesite
site-id = standard
instance = instance1
default-language = fr
profiles-initial = Products.CMFPlone:plone-content
site-replace = false
post-extras = standard-config.py
