map $http_x_forwarded_proto $the_scheme {
     default $http_x_forwarded_proto;
     "" $scheme;
}

map $http_x_forwarded_host $the_host {
    default $http_x_forwarded_host;
    "" $host;
}

map $http_upgrade $proxy_connection {
    default upgrade;
    "" close;
}

# --- main server definition ---

# In production this needs to move to SSL with a redirect on :80->:443
server {
    listen 80;
    server_name host.docker.internal;


    location /collabora {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $proxy_connection;
        # Setting the correct Host header is required so that Collabora
        # binds to the "right" hostname. You can verify that this worked in:
        # Verify in http://host.docker.internal/collabora/hosting/discovery
        # See https://sdk.collaboraonline.com/docs/installation/Proxy_settings.html
        proxy_set_header Host $the_host;
        proxy_pass http://host.docker.internal:9980;
        proxy_http_version 1.1;
    }

    location / {
        # Only allow GET, HEAD, POST and PURGE requests.
        # We also need to allow PUT, LOCK and UNLOCK requests for enabling Zope External Editor
        if ($request_method !~ ^(GET|HEAD|POST|PURGE|PUT|LOCK|UNLOCK)$ ) {
          return 444;
        }

        # TODO switch this to "https"
        set $virt_scheme "http";
        if ($http_x_forwarded_proto) {
          set $virt_scheme $http_x_forwarded_proto;
        }
        # Plone
        rewrite ^(.*)$ /VirtualHostBase/$virt_scheme/host.docker.internal/Plone/VirtualHostRoot/$1 break;

        # fall-through (effective when no 'break' rule has been hit)
        return 404;

        proxy_pass http://172.17.0.1:8081;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-If-Modified-Since $http_if_modified_since;
        proxy_set_header Connection "";
        proxy_redirect off;
        proxy_intercept_errors on;

   }
}
