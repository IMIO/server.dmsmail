[buildout]
extends =
    sources.cfg
    versions-dev.cfg

allow-picked-versions = true

parts +=
    test
    testme
    coverage
    coverageme
    report
    robot
    instance-amqp

always-checkout = force
auto-checkout +=
    Products.CPUtils
    Products.PasswordStrength
    collective.eeafaceted.collectionwidget
    collective.eeafaceted.z3ctable
    collective.behavior.talcondition
    collective.compoundcriterion
    collective.contact.core
    collective.contact.duplicated
    collective.contact.facetednav
    collective.contact.plonegroup
    collective.contact.widget
    collective.dms.basecontent
    collective.dms.batchimport
    collective.dms.mailcontent
    collective.dms.scanbehavior
    collective.dms.thesaurus
#    collective.local.workspace
    collective.messagesviewlet
    collective.task
    collective.querynextprev
    collective.zamqp
    communesplone.layout
    dexterity.localroles
    dexterity.localrolesfield
    eea.facetednavigation
    eea.faceted.vocabularies
    imio.actionspanel
    imio.dashboard
    imio.dms.amqp
    imio.dms.policy
    imio.helpers
    imio.history
    imio.migrator
    imio.prettylink
    z3c.table

[instance1]
#use the instance1 eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
#webdav-address=1980
debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True
    ENV DEV

eggs +=
    ${debug:eggs}
    Products.Clouseau
    Products.PrintingMailHost
    collective.wfautodoc
    plone.app.workflowmanager
    wildcard.fixpersistentutilities
zcml +=
    ${debug:zcml}

[instance-amqp]
<= instance1
zserver-threads = 1
eggs =
    ${instance1:eggs}
    imio.dms.amqp
zcml =
    ${instance1:zcml}
    imio.dms.amqp
http-address = ${port:instance-amqp-http}
zope-conf-additional =
  ${instance1:zope-conf-additional}
  ${zope-conf:amqp}

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    ${buildout:eggs}
    Pillow
    Plone
    Products.PasswordResetTool [test]
    Products.PasswordStrength [test]
    collective.behavior.talcondition [test]
    collective.contact.core [test]
    collective.contact.plonegroup [test]
    collective.dms.basecontent [test]
    collective.dms.batchimport [test]
    collective.dms.mailcontent [test]
    collective.MockMailHost
    collective.querynextprev [test]
    collective.task [test]
    dexterity.localroles [test]
    dexterity.localrolesfield [test]
    imio.actionspanel [test]
    imio.dashboard [test]
    imio.dms.mail [test]
    imio.helpers [test]
    imio.history [test]
    imio.migrator [test]
    ipdb
    plone.app.testing
    robotframework-selenium2screenshots
environment = testenv

[testme]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.dms.mail']

[testenv]
zope_i18n_compile_mo_files = true

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/collective.contact.plonegroup/src/collective/contact/plonegroup,' \
              '${buildout:directory}/src/collective.dms.basecontent/src/collective/dms/basecontent,' \
              '${buildout:directory}/src/collective.dms.batchimport/src/collective/dms/batchimport,' \
              '${buildout:directory}/src/collective.dms.mailcontent/src/collective/dms/mailcontent,' \
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '-s', 'collective.contact.plonegroup',
                              '-s', 'collective.dms.basecontent', '-s', 'collective.dms.mailcontent',
                              '-s', 'collective.dms.batchimport',]

[coverageme]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=coverageme
initialization =
    include = '--source=${buildout:directory}/src/imio.dms.mail/imio/dms/mail,'
    sys.argv = sys.argv[:] + ['run', '-a', include, 'bin/test', '-s', 'imio.dms.mail']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework [debug]
    robotframework-selenium2screenshots
initialization =
    import os
    os.environ['ENV'] = 'DEV'

[omelette]
eggs +=
    ${test:eggs}
